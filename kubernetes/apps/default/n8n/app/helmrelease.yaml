---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: n8n
  namespace: default
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      n8n:
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.2
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: n8n-secret
        containers:
          app:
            image:
              repository: n8nio/n8n
              tag: 1.114.2
              pullPolicy: IfNotPresent
            env:
              TZ: "America/Los_Angeles"
              GENERIC_TIMEZONE: "America/Los_Angeles"
              N8N_USER_FOLDER: "/data"
              N8N_CONFIG_FILES: "/data/config"
              N8N_DEFAULT_LOCALE: "en"
              # URLs and Base Configuration
              N8N_HOST: "auto.${SECRET_DOMAIN}"
              N8N_EDITOR_BASE_URL: "https://auto.${SECRET_DOMAIN}"
              WEBHOOK_URL: "https://auto.${SECRET_DOMAIN}"
              # Features
              N8N_DIAGNOSTICS_ENABLED: "false"
              N8N_DISABLE_UI: "false"
              N8N_HIRING_BANNER_ENABLED: "false"
              N8N_PERSONALIZATION_ENABLED: "true"
              N8N_TEMPLATES_ENABLED: "true"
              N8N_VERSION_NOTIFICATIONS_ENABLED: "false"
              N8N_ONBOARDING_FLOW_DISABLED: "true"
              N8N_WORKFLOW_TAGS_DISABLED: "false"
              # Security
              N8N_BLOCK_ENV_ACCESS_IN_NODE: "false"
              N8N_BASIC_AUTH_ACTIVE: "false"
              N8N_JWT_AUTH_ACTIVE: "false"
              N8N_USER_MANAGEMENT_DISABLED: "false"
              # Logging
              N8N_LOG_FILE_LOCATION: "/data/logs"
              N8N_LOG_LEVEL: "info"
              # Metrics
              N8N_METRICS: "false"
              N8N_DISABLE_PRODUCTION_MAIN_PROCESS: "false"
              N8N_SKIP_WEBHOOK_DEREGISTRATION_SHUTDOWN: "false"
              # Database
              DB_TYPE: "postgresdb"
              DB_POSTGRESDB_HOST: "postgres-rw.database.svc.cluster.local"
              DB_POSTGRESDB_PORT: "5432"
              DB_POSTGRESDB_DATABASE: "n8n"
              DB_POSTGRESDB_USER:
                valueFrom:
                  secretKeyRef:
                    name: n8n-secret
                    key: POSTGRES_USER
              DB_POSTGRESDB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: n8n-secret
                    key: POSTGRES_PASSWORD
              # Redis for queue mode
              QUEUE_BULL_REDIS_HOST: "dragonfly.database.svc.cluster.local"
              QUEUE_BULL_REDIS_PORT: "6379"
              QUEUE_BULL_REDIS_DB: "0"
              # SMTP Configuration
              N8N_EMAIL_MODE: "smtp"
              N8N_SMTP_HOST:
                valueFrom:
                  secretKeyRef:
                    name: n8n-secret
                    key: N8N_SMTP_HOST
              N8N_SMTP_PORT:
                valueFrom:
                  secretKeyRef:
                    name: n8n-secret
                    key: N8N_SMTP_PORT
              N8N_SMTP_USER:
                valueFrom:
                  secretKeyRef:
                    name: n8n-secret
                    key: N8N_SMTP_USER
              N8N_SMTP_PASS:
                valueFrom:
                  secretKeyRef:
                    name: n8n-secret
                    key: N8N_SMTP_PASS
              N8N_SMTP_SENDER:
                valueFrom:
                  secretKeyRef:
                    name: n8n-secret
                    key: N8N_SMTP_SENDER
              N8N_SMTP_SSL: "true"
              # Encryption Key (critical for credentials)
              N8N_ENCRYPTION_KEY:
                valueFrom:
                  secretKeyRef:
                    name: n8n-secret
                    key: N8N_ENCRYPTION_KEY
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 2Gi
    service:
      app:
        controller: n8n
        ports:
          http:
            port: 5678
    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: "auto.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
    persistence:
      data:
        enabled: true
        existingClaim: n8n-data
        globalMounts:
          - path: /data
      logs:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /data/logs