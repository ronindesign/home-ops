---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: homebox
  namespace: default
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  dependsOn:
    - name: external-secrets
      namespace: external-secrets
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: cloudnative-pg-cluster
      namespace: database
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      homebox:
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.2
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: homebox
              - secretRef:
                  name: homebox-initdb
        containers:
          homebox:
            image:
              repository: ghcr.io/sysadminsmedia/homebox
              tag: 0.21.0-rootless
              pullPolicy: IfNotPresent
            env:
              TZ: America/Los_Angeles
              HBOX_LOG_LEVEL: info
              HBOX_LOG_FORMAT: json
              HBOX_WEB_PORT: &port "7745"
              HBOX_WEB_MAX_UPLOAD_SIZE: 100
              HBOX_DATABASE_DRIVER: postgres
              HBOX_DATABASE_SSL_MODE: disable
              HBOX_OPTIONS_ALLOW_REGISTRATION: "false"
              HBOX_OPTIONS_CHECK_GITHUB_RELEASE: "false"
            envFrom:
              - secretRef:
                  name: homebox
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 2Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: homebox
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: "box.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
    persistence:
      data:
        existingClaim: ${APP}
      modcache:
        type: emptyDir
        sizeLimit: 100Mi
        globalMounts:
          - path: /.cache